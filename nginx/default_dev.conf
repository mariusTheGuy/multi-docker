# upstream server that target a domain/service/host(client) name
# that Nginx can redirect traffic to
upstream client {
  # server hosted in a service named client 
  # 3000 is the default PORT for a REACT app
  server client:3000;
}
upstream api {
  # 5000 is setup in server(api)>index.js
  # 'api' instead 'server' to avoid name collision
  server api:5000;
}

server {
  # we can decide the port of this nginx container
  listen 80;

  # ROUTING RULES: requests
  location / {
    proxy_pass http://client;
  }
  # this will allow websocket connections between the React service and the browser
  # Only necessary in development because we are using docker volumes + nodemon
  location /ws {
      proxy_pass http://client;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
  }
  location /api {
    # to chop off the '/api' part from the URL
    # '$1' refers to whatever '.*' will have
    # ie. before /api/values/all -> after /values/all
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}